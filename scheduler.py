# scheduler.py
import datetime
from aiogram import Bot
from sqlalchemy.orm import Session
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from db import get_db, MasterClass
from config import ADMINS

scheduler = AsyncIOScheduler()

async def open_registrations_task(bot: Bot):
    """
    –ó–∞–¥–∞—á–∞, –∫–æ—Ç–æ—Ä–∞—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 10:00 –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –∑–∞–ø–∏—Å—å –Ω–∞ –≤—Å–µ –ú–ö
    –∏ –æ–ø–æ–≤–µ—â–∞–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.
    """
    db: Session = next(get_db())
    master_classes = db.query(MasterClass).filter(MasterClass.is_open == False).all()
    
    # –û—Ç–∫—Ä—ã—Ç–∏–µ –∑–∞–ø–∏—Å–∏
    for mc in master_classes:
        mc.is_open = True
        db.commit()
    
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
    if master_classes:
        for admin_id in ADMINS:
            try:
                await bot.send_message(
                    chat_id=admin_id,
                    text="üì¢ –ó–∞–ø–∏—Å—å –Ω–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–µ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã –æ—Ç–∫—Ä—ã—Ç–∞!"
                )
            except Exception as e:
                print(f"Failed to send message to admin {admin_id}: {e}")

def setup_scheduler(bot: Bot):
    """
    –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫.
    """
    scheduler.add_job(
        open_registrations_task,
        "cron",
        hour=10,  # –ó–∞–ø—É—Å–∫ –≤ 10:00 —É—Ç—Ä–∞
        minute=0,
        args=(bot,)
    )
    scheduler.start()
